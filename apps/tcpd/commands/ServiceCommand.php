<?php

namespace apps\tcpd\commands;

use mix\console\Command;
use mix\console\ExitCode;
use mix\facades\Error;
use mix\facades\Output;
use mix\helpers\ProcessHelper;

class ServiceCommand extends Command
{

    // 是否后台运行
    public $daemon = false;

    // PID 文件
    protected $pidFile;

    // 选项配置
    public function options()
    {
        return ['daemon'];
    }

    // 选项别名配置
    public function optionAliases()
    {
        return ['d' => 'daemon'];
    }

    // 初始化事件
    public function onInitialize()
    {
        parent::onInitialize(); // TODO: Change the autogenerated stub
        // 从配置文件中取出 pid 文件
        $this->pidFile = app()->objects['tcpServer']['setting']['pid_file'];
    }

    // 启动服务
    public function actionStart()
    {
        // 重复启动处理
        if ($pid = ProcessHelper::readPidFile($this->pidFile)) {
            Output::writeln("mix-tcpd is running, PID : {$pid}.");
            return ExitCode::UNSPECIFIED_ERROR;
        }
        // 启动提示
        Output::writeln('mix-tcpd start successed.');
        // 蜕变为守护进程
        if ($this->daemon) {
            ProcessHelper::daemon();
        }
        // 创建服务
        $server = app()->createObject('tcpServer');
        $server->on('Connect', [$this, 'onConnect']);
        $server->on('Receive', [$this, 'onReceive']);
        $server->on('Close', [$this, 'onClose']);

        // 启动服务
        $server->start();
        // 返回退出码
        return ExitCode::OK;
    }

    // 停止服务
    public function actionStop()
    {
        if ($pid = ProcessHelper::readPidFile($this->pidFile)) {
            ProcessHelper::kill($pid);
            while (ProcessHelper::isRunning($pid)) {
                // 等待进程退出
                usleep(100000);
            }
            Output::writeln('mix-tcpd stop completed.');
        } else {
            Output::writeln('mix-tcpd is not running.');
        }
        // 返回退出码
        return ExitCode::OK;
    }

    // 重启服务
    public function actionRestart()
    {
        $this->actionStop();
        $this->actionStart();
        // 返回退出码
        return ExitCode::OK;
    }

    // 查看服务状态
    public function actionStatus()
    {
        if ($pid = ProcessHelper::readPidFile($this->pidFile)) {
            Output::writeln("mix-tcpd is running, PID : {$pid}.");
        } else {
            Output::writeln('mix-tcpd is not running.');
        }
        // 返回退出码
        return ExitCode::OK;
    }

//    // 连接事件回调函数
//    public function onConnect(\Swoole\Server $server, $fd)
//    {
//        var_dump('222');
//        echo "connection open: {$fd}\n";
//    }
//
//    // 接收消息事件回调函数
//    public function onReceive(\Swoole\Server $server, $fd, $reactor_id, $data)
//    {
//        $server->send($fd, "Swoole: {$data}");
//        $server->close($fd);
//    }
//
//    // 关闭连接事件回调函数
//    public function onClose(\Swoole\Server $server, $fd)
//    {
//        echo "connection close: {$fd}\n";
//    }

}
